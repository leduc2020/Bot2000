"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const {YamlDatabase} = require("five.db");
var db = new YamlDatabase({databasePath:"./fivedb.yml"});
var request = require('request');
var parse = require('xml2js');
var moment = require('moment');
var EventEmitter = require('events');

class YouTube extends EventEmitter {
    constructor(){
    super();
    this.YouTube = new EventEmitter();
    }


    /**
     * .setChannel()
     * @param {string} ChannelID Your YouTube Channel ID
     * @property setChannel("Your Channel ID")
     * @example setChannel("UCuawd2Rz4JDMjI-cKEHfkgg")
     * @returns 
     */
    setChannel(ChannelID){
   if(!ChannelID || typeof ChannelID !== "string")return new SyntaxError("YouTube Channel ID must be a string or cannot be left blank.")
   request("https://www.youtube.com/feeds/videos.xml?channel_id=" + ChannelID, function(err, res, body) {
    if (err) return console.log(err);
    parse.parseString(body, async function(err, result) {
            if (err) return console.log(err);
            let videoID = result.feed.entry[0].id[0].split(':').pop();
            let getdb_videoID = db.get(`yt_${ChannelID}`)?.videoID;
            if (getdb_videoID == videoID) return;
            let data = {
                id: result.feed.entry[0].id[0],
                videoID: videoID,
                title: result.feed.entry[0].title[0],
                link: result.feed.entry[0].link[0].$.href,
                author: result.feed.entry[0].author[0].name[0],
                published: result.feed.entry[0].published[0],
                updated: result.feed.entry[0].updated[0],
                thumbnail: result.feed.entry[0]['media:group'][0]['media:thumbnail'][0].$.url,
                description: result.feed.entry[0]['media:group'][0]['media:description'][0],
                views: result.feed.entry[0]['media:group'][0]['media:community'][0]['media:statistics'][0].$.views,
                check_date: moment().format('DD/MM/YYYY HH:mm:ss')
            }
            db.set("videoexport",data)
            db.set(`yt_${ChannelID}`, data);
        });
    })
   let data = db.get("videoexport");
   if(!data || data == null) return console.log("\x1b[36m", "[youtube-alert]", "\x1b[0m", "\x1b[31m", "Installation Complete! Restart Your Project for the Package to Work!", "\x1b[0m")
   this.emit("newPost",data)
    }
}

module.exports = YouTube;